name: e2e-tests
on:
  workflow_call:
    inputs:
      REQUIRED_TESTS:
        required: true
        type: string

jobs:
    docker-build:
        runs-on: ubuntu-latest
        outputs:
          IMAGE_TAG_PRERELEASE: ${{ steps.image-prerelease-tag.outputs.IMAGE_TAG_PRERELEASE }}
          TEST_NAMES: ${{ steps.export_tests_to_env.outputs.TEST_NAMES }}
        permissions:
          id-token: write
          packages: write
          contents: read    
          pull-requests: read  
    
        steps:
    
          # - name: Exit if not on master branch
          #   if: github.ref == 'master'
          #   run: exit -1
    
          - uses: actions/checkout@v3
            name: Checkout
            with:
              fetch-depth: 0
            #   submodules: recursive
    
          - uses: actions/setup-go@v3
            name: Installing go
            with:
              go-version: ${{ inputs.GO_VERSION }}
    
          - name: Set up QEMU
            uses: docker/setup-qemu-action@v2
    
          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v2
    
          - name: Set prerelease image tag
            id: image-prerelease-tag
            run: echo "IMAGE_TAG_PRERELEASE=${{ inputs.IMAGE_TAG }}-prerelease" >> $GITHUB_OUTPUT
    
          - name: Run unit test
            id: unit-test
            run: go test -v ./...
    
          - name: Build and push
            uses: docker/build-push-action@v3
            with:
              context: .
              file: build/Dockerfile
              tags: ${{ inputs.IMAGE_NAME }}:${{ steps.image-prerelease-tag.outputs.IMAGE_TAG_PRERELEASE }}
              build-args: image_version=${{ steps.image-prerelease-tag.outputs.IMAGE_TAG }}
              platforms: ${{ inputs.BUILD_PLATFORM }}
              cache-from: type=gha
              cache-to: type=gha,mode=max
              push: true
    
          - name: Install cosign
            uses: sigstore/cosign-installer@main
            with:
              cosign-release: 'v1.12.0'
    
          - name: sign kubescape container image
            if: ${{ inputs.COSIGN }}
            env:
              COSIGN_EXPERIMENTAL: "true"
            run: |
                cosign sign --force ${{ inputs.IMAGE_NAME }}:${{ steps.image-prerelease-tag.outputs.IMAGE_TAG_PRERELEASE }}
    
          - id: export_tests_to_env
            name: set test name
            run: |
              echo "TEST_NAMES=$input" >> $GITHUB_OUTPUT
            env:
              input: ${{ inputs.REQUIRED_TESTS }}
    